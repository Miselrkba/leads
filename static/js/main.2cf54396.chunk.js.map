{"version":3,"sources":["context/LanguageContext.js","components/Translations.js","components/Outcome.js","components/Card.js","components/MainLeads.js","App.js","index.js"],"names":["React","createContext","words","slova","Outcome","handleDropdownChange","e","props","target","value","Fragment","className","name","htmlFor","this","context","onChange","Component","contextType","LanguageContext","Card","state","copied","selectValue","handleCopy","setState","setTimeout","actionStates","success","fail","callback","company","href","email","type","phone","text","onClick","Background","people","language","getLeadsButtonClick","getLeadsData","onLanguageChange","axios","get","then","response","data","results","catch","error","alert","console","log","window","location","reload","map","person","key","cell","first","last","city","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2cf54396.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default React.createContext();\r\n","export const words = {\r\n  name: \"Name\",\r\n  company: \"Company\",\r\n  email: \"Email\",\r\n  emailed: \"emailed\",\r\n  called: \"called\",\r\n  number: \"Number\",\r\n  open: \"open\",\r\n  success: \"close successful\",\r\n  fail: \"close unsuccessful\",\r\n  callback: \"callback\",\r\n  copy: \"copy\",\r\n  copied: \"copied\",\r\n  outcome: 'Outcome'\r\n};\r\n\r\nexport const slova = {\r\n  meno: \"Meno\",\r\n  spolocnost: \"Spoločnosť\",\r\n  email: \"Email\",\r\n  emailPoslany: \"email poslaný\",\r\n  zavolane: \"zavolané\",\r\n  cislo: \"Tel. číslo\",\r\n  otvorene: \"otvorené\",\r\n  uzatvorene: \"uzatvorené úspešne\",\r\n  neuzatvorene: \"uzatvorené neúspešne\",\r\n  zavolat: \"kontaktovať znova\",\r\n  kopiruj: \"kopíruj\",\r\n  skopirovane: \"skopírované\",\r\n  vysledok: 'Výsledok'\r\n};\r\n","import React, { Component } from \"react\";\r\nimport LanguageContext from \"../context/LanguageContext\";\r\nimport { words, slova } from \"./Translations\";\r\n\r\nexport default class Outcome extends Component {\r\n  static contextType = LanguageContext;\r\n\r\n  handleDropdownChange = (e) => {\r\n    this.props.handleDropdownChange(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"outcome\">\r\n          <ion-icon name=\"podium-outline\"></ion-icon>\r\n          <label className=\"outcome-label\" htmlFor=\"outcome\">\r\n            {this.context === \"english\"\r\n              ? `${words.outcome}`\r\n              : `${slova.vysledok}`}\r\n          </label>\r\n          <select name=\"outcome\" onChange={this.handleDropdownChange}>\r\n            <option value=\"open\">\r\n              {this.context === \"english\"\r\n                ? `${words.open}`\r\n                : `${slova.otvorene}`}\r\n            </option>\r\n            <option value=\"success\">\r\n              {this.context === \"english\"\r\n                ? `${words.success}`\r\n                : `${slova.uzatvorene}`}\r\n            </option>\r\n            <option value=\"fail\">\r\n              {this.context === \"english\"\r\n                ? `${words.fail}`\r\n                : `${slova.neuzatvorene}`}\r\n            </option>\r\n            <option value=\"callback\">\r\n              {this.context === \"english\"\r\n                ? `${words.callback}`\r\n                : `${slova.zavolat}`}{\" \"}\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport LanguageContext from \"../context/LanguageContext\";\r\nimport { words, slova } from \"./Translations\";\r\nimport Outcome from \"./Outcome\";\r\n\r\nclass Card extends React.Component {\r\n  static contextType = LanguageContext;\r\n\r\n  state = {\r\n    copied: false,\r\n    selectValue: \"\",\r\n  };\r\n\r\n  handleCopy = () => {\r\n    this.setState({\r\n      copied: !this.state.copied,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ copied: false });\r\n    }, 1000);\r\n  };\r\n\r\n  handleDropdownChange = (selectValue) => {\r\n    this.setState({\r\n      selectValue: selectValue,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const actionStates = {\r\n      success: `success`,\r\n      fail: `fail`,\r\n      callback: `callback`,\r\n    };\r\n\r\n    const success = this.state.selectValue === actionStates.success;\r\n    const fail = this.state.selectValue === actionStates.fail;\r\n    const callback = this.state.selectValue === actionStates.callback;\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          success\r\n            ? \"box success\"\r\n            : fail\r\n            ? \"box fail\"\r\n            : callback\r\n            ? \"box callback\"\r\n            : \"box\"\r\n        }\r\n      >\r\n        {/* render outcome box */}\r\n        <Outcome selectValue={this.state.selectValue} handleDropdownChange={this.handleDropdownChange}/>\r\n        \r\n        {/* box properties - name company email and number  */}\r\n        <h4>\r\n          <ion-icon name=\"people-circle-outline\"></ion-icon>\r\n          {this.context === \"english\" ? `${words.name}` : `${slova.meno}`}:{\" \"}\r\n          {this.props.name}\r\n        </h4>\r\n        <h4>\r\n          <ion-icon name=\"business-outline\"></ion-icon>\r\n          {this.context === \"english\"\r\n            ? `${words.company}`\r\n            : `${slova.spolocnost}`}\r\n          : {this.props.company}\r\n        </h4>\r\n        <h4>\r\n          <ion-icon name=\"mail-outline\"></ion-icon>\r\n          Email: {\"  \"}\r\n          <a className=\"link\" href={`mailto:${this.props.email}`}>\r\n            {this.props.email}\r\n          </a>\r\n          <input className=\"checkbox\" type=\"checkbox\" />\r\n          {this.context === \"english\"\r\n            ? `${words.emailed}`\r\n            : `${slova.emailPoslany}`}\r\n        </h4>\r\n\r\n        <h4 className=\"number\">\r\n          <ion-icon name=\"call-outline\"></ion-icon>\r\n          {this.context === \"english\"\r\n            ? `${words.number}`\r\n            : `${slova.cislo}`}: {this.props.phone}\r\n          <input className=\"checkbox\" type=\"checkbox\" />\r\n          {this.context === \"english\" ? `${words.called}` : `${slova.zavolane}`}\r\n          <CopyToClipboard text={this.props.phone}>\r\n            <button className=\"copy-btn\" onClick={this.handleCopy}>\r\n              {this.state.copied\r\n                ? `${\r\n                    this.context === \"english\"\r\n                      ? `${words.copied}`\r\n                      : `${slova.skopirovane}`\r\n                  }`\r\n                : `${\r\n                    this.context === \"english\"\r\n                      ? `${words.copy}`\r\n                      : `${slova.kopiruj}`\r\n                  }`}\r\n            </button>\r\n          </CopyToClipboard>\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n\r\n// testing","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from \"./Card\";\r\nimport LanguageContext from \"../context/LanguageContext\";\r\n\r\nexport default class Background extends Component {\r\n  state = {\r\n    people: [],\r\n    language: \"english\",\r\n  };\r\n\r\n\r\n  //fetch data from API and push into state\r\n  async getLeadsData() {\r\n    await axios\r\n      .get(\r\n        `https://cors-anywhere.herokuapp.com/https://randomuser.me/api/?results=9`\r\n      )\r\n      .then((response) => {\r\n        this.setState({\r\n          people: response.data.results,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Error ========> Fetching Failed - reloading page\", error);\r\n        console.log(error);\r\n        window.location.reload();\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLeadsData();\r\n  }\r\n\r\n  getLeadsButtonClick = () => {\r\n    this.getLeadsData();\r\n  };\r\n\r\n  onLanguageChange = (language) => {\r\n    this.setState({ language });\r\n  };\r\n\r\n  render() {\r\n    //map over state and render cards\r\n    const people = this.state.people.map((person) => {\r\n      return (\r\n        <Card\r\n          key={person.cell}\r\n          name={`${person.name.first}  ${person.name.last}`}\r\n          email={person.email}\r\n          phone={person.phone}\r\n          company={person.location.city}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <>\r\n      {/* wrap all components in Context for language change Sk/En */}\r\n        <LanguageContext.Provider value={this.state.language}>\r\n          <div className=\"top\">\r\n            <span className=\"language\">\r\n              <i\r\n                className=\"flag gb\"\r\n                onClick={() => this.onLanguageChange(\"english\")}\r\n              ></i>\r\n              <i\r\n                className=\"flag sk\"\r\n                onClick={() => this.onLanguageChange(\"slovak\")}\r\n              ></i>\r\n            </span>\r\n            {/* title and get bew leads button */}\r\n            <h1 className=\"title\">XpressLeads</h1>\r\n            <div className=\"btn\">\r\n              <button onClick={this.getLeadsButtonClick}>\r\n                {this.state.language === \"english\"\r\n                  ? \"Get new leads\"\r\n                  : \"Dalšie kontakty\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"container\">{people}</div>\r\n        </LanguageContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport MainLeads from \"./components/MainLeads\";\n\nfunction App() {\n  return <MainLeads />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}